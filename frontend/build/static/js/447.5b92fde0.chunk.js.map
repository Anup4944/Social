{"version":3,"file":"static/js/447.5b92fde0.chunk.js","mappings":"kPA2EA,EAnEuB,WACrB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAA3DC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,UAgCxB,OAxBAC,EAAAA,EAAAA,YAAU,WACJH,KACFI,EAAAA,EAAAA,IAAM,GAAD,OAAIJ,GAAS,CAChBK,SAAU,IACVC,SAAU,aACVC,UAAW,CACTC,QAAS,OACTC,UAAW,UAGfd,EAAS,CAAEe,KAAM,iBAEfT,KACFG,EAAAA,EAAAA,IAAM,GAAD,OAAIH,GAAW,CAClBI,SAAU,IACVC,SAAU,aACVC,UAAW,CACTC,QAAS,OACTC,UAAW,UAGfd,EAAS,CAAEe,KAAM,mBAElB,CAACT,EAASD,EAAOL,KAElB,gBAAKgB,UAAU,iBAAf,UACE,kBAAMA,UAAU,qBAAqBC,SAhClB,SAACC,GACtBA,EAAEC,iBAEFnB,GAASoB,EAAAA,EAAAA,IAAqBtB,KA6B5B,WACE,SAAC,KAAD,KACA,SAACuB,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAUC,MAAO,WAFzD,mEAMA,kBACEV,UAAU,uBACVD,KAAK,QACLY,YAAY,mBACZC,UAAQ,EACRC,MAAO/B,EACPgC,SAAU,SAACZ,GAAD,OAAOnB,EAASmB,EAAEa,OAAOF,WAGrC,SAACG,EAAA,EAAD,CAAQC,SAAU1B,EAAWQ,KAAK,SAAlC,yBAGA,SAACiB,EAAA,EAAD,CAAQC,SAAU1B,EAAlB,UACE,SAAC,KAAD,CAAM2B,GAAG,IAAT","sources":["component/ForgetPassword/ForgetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./ForgetPassword.css\";\r\nimport { Typography, Button } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { forgotPasswordAction } from \"../../Actions/User\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Toaster, toast } from \"react-hot-toast\";\r\n\r\nconst ForgetPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { error, message, isLoading } = useSelector((state) => state.like);\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(forgotPasswordAction(email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast(`${error}`, {\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n        iconTheme: {\r\n          primary: \"#000\",\r\n          secondary: \"#fff\",\r\n        },\r\n      });\r\n      dispatch({ type: \"clearErrors\" });\r\n    }\r\n    if (message) {\r\n      toast(`${message}`, {\r\n        duration: 4000,\r\n        position: \"top-center\",\r\n        iconTheme: {\r\n          primary: \"#000\",\r\n          secondary: \"#fff\",\r\n        },\r\n      });\r\n      dispatch({ type: \"clearErrors\" });\r\n    }\r\n  }, [message, error, dispatch]);\r\n  return (\r\n    <div className=\"forgotPassword\">\r\n      <form className=\"forgotPasswordForm\" onSubmit={handleOnSubmit}>\r\n        <Toaster />\r\n        <Typography\r\n          variant=\"h6\"\r\n          style={{ padding: \"2vmax\", textAlign: \"center\", color: \"crimson\" }}\r\n        >\r\n          Forgot Password? No worries, we can fix that easily!\r\n        </Typography>\r\n        <input\r\n          className=\"forgotPasswordInputs\"\r\n          type=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <Button disabled={isLoading} type=\"submit\">\r\n          Send Token\r\n        </Button>\r\n        <Button disabled={isLoading}>\r\n          <Link to=\"/\">Back</Link>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"names":["useState","email","setEmail","dispatch","useDispatch","useSelector","state","like","error","message","isLoading","useEffect","toast","duration","position","iconTheme","primary","secondary","type","className","onSubmit","e","preventDefault","forgotPasswordAction","Typography","variant","style","padding","textAlign","color","placeholder","required","value","onChange","target","Button","disabled","to"],"sourceRoot":""}